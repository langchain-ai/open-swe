export interface SWEBenchInput {
  /**
   * A formatted instance identifier, usually as repo_owner__repo_name-PR-number.
   */
  instance_id: string;
  /**
   * The gold patch, the patch generated by the PR (minus test-related code), that resolved the issue.
   */
  patch: string;
  /**
   * The repository owner/name identifier from GitHub.
   */
  repo: string;
  /**
   * The original repository owner/name identifier, if the repo the agent is cloning is a fork.
   */
  original_repo?: string;
  /**
   * The commit hash of the repository representing the HEAD of the repository before the solution PR is applied.
   */
  base_commit: string;
  /**
   * Comments made on the issue prior to the creation of the solution PRâ€™s first commit creation date.
   */
  hints_text: string;
  /**
   * The creation date of the pull request.
   */
  created_at: string;
  /**
   * A test-file patch that was contributed by the solution PR.
   */
  test_patch: string;
  /**
   * The issue title and body.
   */
  problem_statement: string;
  /**
   * Installation version of Python to use for running evaluation.
   */
  version: number;
  /**
   * commit hash to use for environment setup and installation.
   */
  environment_setup_commit: string;
  /**
   * A json list of strings that represent the set of tests resolved by the PR and tied to the issue resolution.
   */
  FAIL_TO_PASS: string;
  /**
   * A json list of strings that represent tests that should pass before and after the PR application.
   */
  PASS_TO_PASS: string;
}
